# important: I am not responsible for any damage that may occur during the execution of the program, use it responsibly
# this program will create random file like .txt, .pdf, .exe, etc.
# this can be use for testing, dummy files, learning purpose or whatever you want to do with this program
# you can change or add extension names on line 13

import os # for working with operating system such as changing directories, listing files on the directory, get the current directy, etc.
import random as rand  # to be able to choose random names or to able to randomize things
import string  # used as different characters to choose from randomizing name, it serves as the choices for names



def generateRandomFile(targetPath, numGenerate):  # method that will call to generateRandomFile
    extensionName = ['.txt', '.pdf', '.exe', '.docx', '.pptx', '.py', '.java', '.zip', '.rar', '']  # file extensions for files to be generated
    os.chdir(targetPath)  # change directory to the targetPath
    print(f'current directory: {os.getcwd()}')

    numGenerate = int(numGenerate)  # convert it from string to int
    for i in range(numGenerate):  # used the number to loop for creating files
        rand_letters = ''  # declare first the string before using .join
        rand_letters = rand_letters.join(rand.choice(string.ascii_letters) for i in range(20))  # generate a string like XPkcauvBFIjOgqNEAott
        rand_extName = rand.choice(extensionName)  # choose file extension name for the file

        if rand_letters not in os.listdir(targetPath):  # if that file name does not exist in the targetPath or the directory
            with open(f'{rand_letters}{rand_extName}', 'w') as file:  # create the file with filename + extension name
                file.close()  # close it
            print(f'File created named {rand_letters}{rand_extName}')
        else:
            print(f'File named {rand_letters}{rand_extName} exist, it will generate again.')


def validatePath():  # validate the path or directory if it is exist
    while True:  # continue to loop if the path or directory does not exist
        targetPath = input('Enter the absolute path of the target folder (like C:\\Users\\User\\Downloads) or type \"this\" if you want this folder where this file belongs or type \"x\" if you want to exit the program: ')  # prompt the user to input path/directory

        try:
            if '\\' in targetPath:
                if not os.path.exists(targetPath):  # if the path/directory does not exist then alert the user
                    print('The path you type does not exist!')
                else:
                    return targetPath  # return the targetPath if it is valid
        except:
            print('An error occured')
            break

        if targetPath == 'this':  # if the user type this, then the current path/directory of the file will be used
            targetPath = os.getcwd()  # get the current working directory
            return targetPath  # return the current path
        elif targetPath == 'x':  # if the user input x then it will exit the program
            print('----- Program exited-----')
            exit()
        else:
            print('Please type the requirements or type \"x\" to exit the program or close the application.')

def validateNumFileGenerate():  #validate the input of users for number of files to be generated
    while True:
        numFileGenerate = input('Enter the number of files to be generated or type \"x\" to exit the program: ')  # prompt user to input the number of file to be generated

        if numFileGenerate == 'x':  # exit if the user input is x
            print('----- Program exited -----')
            exit()
        else:
            try:
                return int(numFileGenerate)  # because the input() return string, we should convert it to int and return it
            except:
                print('Invalid input, please type number of files to be generate correctly.')

# START OF THE PROGRAM
print()
print('------------------------------------')
print('---------- File Generator ----------')
print('------------------------------------')
print()
targetPath = validatePath()  #call the method that will validate the path entered by the user
numFileGenerate = validateNumFileGenerate()  #call the method that will validate the number of files to be generated by the user

generateRandomFile(targetPath, numFileGenerate)  #call the method that require numbers of files to be generated and target destination path/folder

print('\n----- Program exited-----\n\n')
print('Contact deliriousmansano13@gmail.com if you have suggestions or concerns. Thank you.')
